window.slidesk.sendMessage = (payload) => {
  window.slidesk.waitForSocketConnection(payload);
};

window.slidesk.waitForSocketConnection = (payload) => {
  setTimeout(() => {
    if (window.slidesk.io?.readyState === 1) window.slidesk.io.send(payload);
    else window.slidesk.waitForSocketConnection(payload);
  }, 5);
};

if (window.slidesk.io) {
  window.slidesk.io.onmessage = (event) => {
    const { action } = JSON.parse(event.data);
    if (action === "reload") window.location.reload();
    else if (action === "next") window.slidesk.next();
    else if (action === "previous") window.slidesk.previous();
  };
}

window.slidesk.cleanOldSlide = (id) => {
  window.slidesk.slides[id].classList.remove("sd-current", "no-sd-animation");
};

window.slidesk.changeSlide = () => {
  window.slidesk.slides[window.slidesk.currentSlide].classList.remove(
    "sd-previous",
  );
  window.slidesk.slides[window.slidesk.currentSlide].classList.add(
    "sd-current",
  );
  window.location.hash =
    window.slidesk.slides[window.slidesk.currentSlide].getAttribute(
      "data-slug",
    );
  if (window.slidesk.io) {
    window.slidesk.sendMessage(
      JSON.stringify({
        action: "current",
        payload: window.slidesk.slides[
          window.slidesk.currentSlide
        ].outerHTML.replace(/data-source="(^["])"/gi, ""),
      }),
    );
    window.slidesk.sendMessage(
      JSON.stringify({
        action: "future",
        payload:
          window.slidesk.currentSlide !== window.slidesk.slides.length - 1
            ? window.slidesk.slides[
                window.slidesk.currentSlide + 1
              ].outerHTML.replace(/data-source="(^["])"/gi, "")
            : "",
      }),
    );
  }
  document.getElementById("sd-progress").style.width =
    (100 * (window.slidesk.currentSlide + 1)) / window.slidesk.slides.length +
    "%";
  window.slidesk.slides[window.slidesk.currentSlide]
    .querySelectorAll("img")
    .forEach((i) => i.setAttribute("src", i.getAttribute("src")));
  window.slidesk.onSlideChange();
};

window.slidesk.next = () => {
  if (window.slidesk.currentSlide !== window.slidesk.slides.length - 1) {
    window.slidesk.cleanOldSlide(window.slidesk.currentSlide);
    window.slidesk.slides[window.slidesk.currentSlide].classList.add(
      "sd-previous",
    );
    window.slidesk.currentSlide += 1;
    window.slidesk.changeSlide();
  }
};

window.slidesk.previous = () => {
  if (window.slidesk.currentSlide !== 0) {
    window.slidesk.cleanOldSlide(window.slidesk.currentSlide);
    window.slidesk.currentSlide -= 1;
    window.slidesk.changeSlide();
  }
};

window.onload = () => {
  window.slidesk.slides = document.querySelectorAll(".sd-slide");
  if (window.slidesk.io) {
    const customcss = [...document.querySelectorAll(".sd-customcss")].map((s) =>
      s.getAttribute("href"),
    );
    if (customcss)
      window.slidesk.sendMessage(
        JSON.stringify({
          action: "customcss",
          payload: customcss.join(","),
        }),
      );
    const customsvjs = document
      .getElementById("sd-scripts")
      .getAttribute("data-sv");
    if (customsvjs)
      window.slidesk.sendMessage(
        JSON.stringify({
          action: "customsvjs",
          payload: customsvjs,
        }),
      );
    const timerCheckpoints = {};
    window.slidesk.slides.forEach((slide) => {
      timerCheckpoints[slide.getAttribute("data-num")] = slide.getAttribute(
        "data-timer-checkpoint",
      );
    });
    window.slidesk.sendMessage(
      JSON.stringify({
        action: "checkpoints",
        payload: {
          timerCheckpoints,
          nbSlides: window.slidesk.slides.length,
        },
      }),
    );
  }
  const loadingHash = window.location.hash.replace("#", "").split("+");
  const slugs = [];
  window.slidesk.slides.forEach((slide, i) => {
    slugs.push(slide.getAttribute("data-slug"));
  });
  window.slidesk.currentSlide = slugs.indexOf(loadingHash[0]);
  if (loadingHash.length > 1)
    window.slidesk.currentSlide += Number(loadingHash[1]);
  if (window.slidesk.currentSlide < 0) window.slidesk.currentSlide = 0;
  if (window.slidesk.currentSlide) {
    for (let i = 0; i < window.slidesk.currentSlide; i += 1) {
      window.slidesk.slides[i].classList.add("sd-previous", "no-sd-animation");
    }
    setTimeout(() => {
      for (let i = 0; i < window.slidesk.currentSlide; i += 1) {
        window.slidesk.slides[i].classList.remove("no-sd-animation");
      }
    }, window.slidesk.animationTimer);
  }
  window.slidesk.slides[window.slidesk.currentSlide].classList.add(
    "sd-current",
    "no-sd-animation",
  );
  window.slidesk.changeSlide();
  document.addEventListener("keydown", (e) => {
    if (e.key === "ArrowLeft") {
      window.slidesk.previous();
    } else if (e.key === "ArrowRight" || e.key === " ") {
      window.slidesk.next();
    }
  });
};
