name: Build and deploy

on:
  push:
    tags:
      - "*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - uses: oven-sh/setup-bun@v1
      - name: Checkout
        uses: actions/checkout@v4
      - run: bun install
      - run: bun gendocs
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: "docs"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    environment: build
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: false

  build_release:
    name: Build Release
    needs: create_release
    environment: build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            release_suffix: ubuntu
          - os: macos-latest
            release_suffix: mac
    runs-on: ${{ matrix.os }}
    steps:
      - uses: oven-sh/setup-bun@v1
      - name: Checkout code
        uses: actions/checkout@v4
      - run: bun install
      - run: bun tools
      - run: bun make:exe
      - name: Compress action step
        uses: a7ul/tar-action@v1.1.3
        id: compress
        with:
          command: c
          files: |
            ./exe
          outPath: slidesk.tar.gz
      - name: Run Linux Build
        if: matrix.os == 'ubuntu-latest'
        run: cat ./slidesk.tar.gz > release_ubuntu.tar.gz
      - name: Run Mac Build
        if: matrix.os == 'macos-latest'
        run: cat ./slidesk.tar.gz > release_mac.tar.gz
      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ needs.create_release.outputs.tag-name }}
          files: release_${{ matrix.release_suffix }}.tar.gz

  publish_npm:
    name: Publish on npm
    environment: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: oven-sh/setup-bun@v1
      - run: bun install
      - run: bun tools
      - run: bun make
      - uses: JS-DevTools/npm-publish@v2
        with:
          token: ${{ secrets.NPM_TOKEN }}
