name: Build

on:
  push:
    tags:
      - "*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    environment: build
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: false

  build_release:
    name: Build Release
    needs: create_release
    environment: build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            release_suffix: ubuntu
          - os: macos-latest
            release_suffix: mac
    runs-on: ${{ matrix.os }}
    steps:
      - uses: oven-sh/setup-bun@v1
      - name: Checkout code
        uses: actions/checkout@v4
      - run: bun install
      - run: bun tools
      - run: bun make:exe
      - name: Compress action step
        uses: a7ul/tar-action@v1.1.3
        id: compress
        with:
          command: c
          files: |
            ./exe
          outPath: slidesk.tar.gz
      - name: Run Linux Build
        if: matrix.os == 'ubuntu-latest'
        run: cat ./slidesk.tar.gz > release_ubuntu.tar.gz
      - name: Run Mac Build
        if: matrix.os == 'macos-latest'
        run: cat ./slidesk.tar.gz > release_mac.tar.gz
      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ needs.create_release.outputs.tag-name }}
          files: release_${{ matrix.release_suffix }}.tar.gz

  generate_packages:
    name: Build packages file
    needs: create_release
    runs-on: ubuntu-latest
    steps:
      - uses: oven-sh/setup-bun@v1
      - name: Checkout code
        uses: actions/checkout@v4
      - run: bun install
      - run: bun tools
      - run: bun make:exe
      - name: create sample script
        run: |
          mkdir -p .debpkg/usr/bin
          cp -p exe/* .debpkg/usr/bin/
      - name: build-deb-action
        uses: jiro4989/build-deb-action@v3
        with:
          package: "slidesk"
          desc: "Your presentation companion"
          arch: "amd64"
          package_root: "exe"
          maintainer: "Sylvain Gougouzian <sylvain@gougouzian.fr>"
          version: ${{ github.ref }}
      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ needs.create_release.outputs.tag-name }}
          files: slidesk_${{ github.ref }}_amd64.deb

  push_docker_hub:
    name: Push on Docker Hub
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
          - os: macos-latest
    runs-on: ${{ matrix.os }}
    environment: build
    needs: build_release
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: gouz/slidesk
      
      - name: Build and push Docker image (Amd64)
        if: matrix.os == 'ubuntu-latest'
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./.github/amd64/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Build and push Docker image (Arm64)
        if: matrix.os == 'macos-latest'
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./.github/arm64/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
